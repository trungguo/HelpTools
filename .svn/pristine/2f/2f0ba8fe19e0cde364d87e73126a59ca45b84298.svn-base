@using Newtonsoft.Json
@using SaleDXGui.Domains
@model FBAccountConfig
@{
    ViewBag.Title = "Chi tiết cấu hình tài khoản FB";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var Channels = (List<Channel>)ViewBag.Channels;
    var Albums = (List<Album>)ViewBag.Albums;

}

<div class="d-flex flex fixed-content">
    <div class="fade aside aside-sm" id="content-aside">
    </div>
    <div class="d-flex flex" id="content-body">
        <div class="d-flex flex-column flex" data-plugin="user">
            <div class="b-b-custom-color mx-3 mx-md-1">
                <div class="row">
                    <div class="col-6">
                        <ul class="nav custom-nav nav-active-border d-flex" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" data-toggle="tab" href="#GeneralInfo" role="tab" aria-controls="home" aria-selected="true">Thông tin chi tiết</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-6">
                        <div class="b-primary bottom ml-2 ml-sm-2 float-right">
                            <ul class="nav navbar-menu order-1 order-lg-2 mr-2">
                                <li class="nav-item">
                                    <button onclick="Back()" class="nav-link px-1 mx-1 text-gray" data-toggle="tooltip" data-title="Quay lại">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-arrow-left mx-2"><line x1="19" y1="12" x2="5" y2="12"></line><polyline points="12 19 5 12 12 5"></polyline></svg>
                                    </button>
                                </li>
                                <li class="nav-item">
                                    <button type="submit" form="editForm" class="nav-link px-1 mx-1 text-primary" data-toggle="tooltip" data-title="Cập nhật">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-save mx-2"><path d="M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"></path><polyline points="17 21 17 13 7 13 7 21"></polyline><polyline points="7 3 7 8 15 8"></polyline></svg>
                                    </button>
                                </li>
                                <li class="nav-item">
                                    <button onclick="Delete('@Model.Id')" class="nav-link px-1 mx-1 text-danger" data-toggle="tooltip" data-title="Xóa">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-trash-2 mx-2"><polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path><line x1="10" y1="11" x2="10" y2="17"></line><line x1="14" y1="11" x2="14" y2="17"></line></svg>
                                    </button>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <div class="tab-content">
                <div class="tab-pane fade active show" id="GeneralInfo" role="tabpanel" aria-labelledby="GeneralInfo">
                    <div class="scroll-y card mx-3 mx-md-1 mb-0" style="height: 90vh;">
                        <div class="card-body">
                            <form id="editForm" role="form" method="post" action="/FBAccountConfig/Save" data-plugin="parsley" data-option="{}">
                                @Html.HiddenFor(x => x.Id)
                                <div class="form-row">
                                    <div class="form-group col-12 col-md-3">
                                        <label class="text-muted">Mã <p class="d-inline text-danger">*</p></label>
                                        @Html.TextBoxFor(x => x.Code, new { @class = "form-control" })
                                    </div>
                                    <div class="form-group col-12 col-md-9">
                                        <label class="text-muted">Tên</label>
                                        @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
                                    </div>
                                </div>
                                <br />
                                <div class="form-row pl-1">
                                    <label class="text-muted">Nội dung</label>
                                    <div class="d-flex">
                                        <a onclick="AddAccountConfig()" class="px-1 mx-1 text-primary" data-toggle="tooltip" data-title="Thêm mới">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-plus-circle mx-2"><circle cx="12" cy="12" r="10"></circle><line x1="12" y1="8" x2="12" y2="16"></line><line x1="8" y1="12" x2="16" y2="12"></line></svg>
                                        </a>
                                        <a onclick="DeleteAccountConfig()" class="px-1 mx-1 text-danger" data-toggle="tooltip" data-title="Xóa">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-trash-2 mx-2"><polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path><line x1="10" y1="11" x2="10" y2="17"></line><line x1="14" y1="11" x2="14" y2="17"></line></svg>
                                        </a>
                                    </div>
                                    <div class="table-responsive" style="padding-top: 0 !important">
                                        <table class="table table-theme table-fixed-head v-middle main-table-custom" id="mainTable" data-pager="#mainListPager">
                                            <thead>
                                                <tr class="table-header-swapper" data-bind-to="#header-to-change" data-item-to-fire=".item-checkbox">
                                                    <th style="width:20px;" no-swap="true">
                                                        <label class="ui-check m-0">
                                                            <input type="checkbox" class="item-total-checkbox" data-bind-to=".item-checkbox">
                                                            <i></i>
                                                        </label>
                                                    </th>
                                                    <th width="150" class="text-muted text-left">Tên</th>
                                                    <th width="450" class="text-muted text-left">Bám đuổi hội nhóm</th>
                                                    <th class="text-muted text-left">Album</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if (Model.Items != null && Model.Items.Count > 0)
                                                {
                                                    foreach (var config in Model.Items)
                                                    {
                                                        <tr class="FBAccountConfigRow v-middle">
                                                            <td>
                                                                <label class="ui-check m-0 ">
                                                                    <input class="item-checkbox" type="checkbox" item-id="@config.Id">
                                                                    <i></i>
                                                                </label>
                                                            </td>
                                                            <td>
                                                                <input class="form-control" id="Account_@config.Id" type="text" value="@config.Account">
                                                            </td>
                                                            <td>
                                                                <div class="d-flex">
                                                                    <button type="button" onclick="SelectCustomer('Nhóm', '#GF_@config.Id')" class="btn btn-sm btn-outline-primary py-0 ml-2" style="height:24px" data-toggle="tooltip" data-title="Chọn">Chọn</button>
                                                                    <textarea class="form-control" cols="20" id="GF_@config.Id" rows="2">@config.Groups</textarea>
                                                                </div>
                                                            </td>
                                                            <td>
                                                                <select id="Album_@config.Id">
                                                                    <option value=""></option>
                                                                    @if (Albums != null && Albums.Count > 0)
                                                                    {
                                                                        foreach (var ab in Albums)
                                                                        {
                                                                            <option value="@ab.Id" @(config?.Reel?.AlbumId == ab.Id ? "selected" : "")>[@ab.Code] @ab.Name</option>
                                                                        }
                                                                    }
                                                                </select>
                                                            </td>
                                                        </tr>
                                                    }
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script id="AccountConfigRowTemplate" type="text/template">
    <tr class="FBAccountConfigRow v-middle">
        <td>
            <label class="ui-check m-0 ">
                <input class="item-checkbox" type="checkbox" item-id="{Index}">
                <i></i>
            </label>
        </td>
        <td>
            <input class="form-control" id="Account_{Index}" type="text" value="">
        </td>
        <td>
            <div class="d-flex">
                <button type="button" onclick="SelectCustomer('Nhóm', '#GF_{Index}')" class="btn btn-sm btn-outline-primary py-0" style="height:24px" data-toggle="tooltip" data-title="Chọn">Chọn</button>
                <textarea class="form-control" cols="20" id="GF_{Index}" rows="2"></textarea>
            </div>
        </td>
        <td>
            <select id="Album_{Index}">
                <option value=""></option>
                @if (Albums != null && Albums.Count > 0)
                {
                    foreach (var ab in Albums)
                    {
                        <option value="@ab.Code">[@ab.Code] @ab.Name</option>
                    }
                }
            </select>
        </td>
    </tr>
</script>

@section scripts {
    <script>
        $(document).ready(function () {
            activeMenu("#MenuFBAccountConfig")

            $('#mainTable tbody').children().map((index, item) => {
                $($(item).find("select")[0]).select2({ width: '50%', dropdownAutoWidth: true })
            });
        });

        Back = function () {
            location.href = "/FBAccountConfig";
        };

        $('#editForm').ajaxForm({
            beforeSend: function () {
                showLoading();
            },
            beforeSubmit: function (formData, jqForm, options) {
                $('#mainTable tbody').children().map((index, item) => {
                    formData.push({ name: 'Items[' + index + '].Id', value: $($(item).find("input")[0]).attr("item-id") });
                    formData.push({ name: 'Items[' + index + '].Account', value: $($(item).find('input')[1]).val() });
                    formData.push({ name: 'Items[' + index + '].Groups', value: $($(item).find("textarea")[0]).val() });
                    formData.push({ name: 'Items[' + index + '].Reel.AlbumId', value: $($(item).find("select")[0]).val() });

                    //var countVideo = $(item).find("textarea").length - 1
                    //if (countVideo > 0) {
                    //    for (var i = 0; i < countVideo; i++) {
                    //        formData.push({ name: 'Items[' + index + '].Reel.VideoDescriptions[' + i + ']', value: $($(item).find("textarea")[i + 1]).val() });
                    //    }
                    //}
                });
                return $('#editForm').parsley().isValid()
            },
            error: function (response, status, xhr) {
                toastr.error(response.statusText)
            },
            success: function (data, status, xhr, $el) {
                hideLoading();
                if (data.Success) {
                    toastr.success(data.Message)
                    setTimeout(Back(), 500);
                } else {
                    toastr.error(data.Message)
                }
            }
        });

        function Delete(id) {
            var ids = [];
            if (id) {
                ids.push(id);
            }

            if (ids.length <= 0) {
                toastr.error('Chưa chọn đối tượng');
                return;
            }

            DialogUtil.showDialog({
                message: "Bạn có chắc chắn muốn xóa không?",
                title: "Yêu cầu xác nhận",
                icon: "question",
                footer: null,
                closeTime: 99999,
                confirmButtonText: "Xác nhận",
                confirmButtonAriaLabel: null,
                customConfirmButtonClass: "confirm-delete",
                cancelButtonText: "Hủy"
            });

            $(".confirm-delete").on("click", function () {
                showLoading();
                $.ajax({
                    url: "/FBAccountConfig/Delete",
                    method: "POST",
                    data: {
                        ids: ids,
                    },
                    accepts: "application/json",
                    success: function (data) {
                        hideLoading();
                        if (data.Success) {
                            toastr.success(data.Message);
                            setTimeout(Back(), 500);
                        } else {
                            toastr.error(data.Message);
                        }
                    },
                    error: function (response, status, xhr) {
                        toastr.error(response.statusText)
                        hideLoading();
                    },
                });
            });
        }

        ListCustomer = []
        CurrentTarget = ""
        CurrentCustomerType = ""
        CurrentChannel = "Facebook"
        function SelectCustomer(customerType, returnto) {
            CurrentTarget = returnto;
            CurrentCustomerType = customerType
            OpenSearchAndSelectCustomerModal()
        }

        AddAccountConfig = function () {
            var template = $("#AccountConfigRowTemplate").html();
            var data = "";
            var newId = NewGUI();
            data = template.replaceAll("{Index}", newId);
            $("#mainTable tbody").append(data);

            $('#Album_' + newId).select2({ width: '50%', dropdownAutoWidth: true })

            return newId
        }

        DeleteAccountConfig = function () {
            var listInput = $('input.item-checkbox');
            if (listInput == null || listInput.length <= 0) {
                return;
            }

            listInput.map((index, item) => {
                if ($(item).prop('checked')) {
                    $(item).closest("tr").remove()
                }
            });
        }

        SearchAndSelectCustomerModal_Confirm = function () {
            CloseSearchAndSelectCustomerModal()

            var value = "";
            if (ListSelectedCustomer && ListSelectedCustomer.length > 0) {
                var listUID = []
                ListSelectedCustomer.map((item, index) => {
                    var contactPoints = item.ContactPoints
                    if (contactPoints) {
                        var channel = contactPoints.find(t => t.Channel.Code == CurrentChannel);
                        if (channel) {
                            listUID.push(channel.UID);
                        }
                    }
                });

                value = listUID.join("|")
            }

            if (CurrentTarget) {
                $(CurrentTarget).val(value)
            }
        }

    </script>
}